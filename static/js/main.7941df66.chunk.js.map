{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","onSearchChange","event","setState","searchField","target","value","title","state","fetch","then","response","json","users","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UAEI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,kCAAMN,EAAMI,QAAQG,MAApB,WCJKC,G,MAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiDHG,G,wDAnDb,aAAc,IAAD,8BACX,gBAwBFC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CACZC,YAAaF,EAAMG,OAAOC,MAC1BC,MAAOL,EAAMG,OAAOC,SAzBtB,EAAKE,MAAQ,CACXf,SAAU,GACVW,YAAa,GACbG,MAAO,IANE,E,qDAab,WAAoB,IAAD,OACjBE,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OACjEA,EAASC,OAERF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAEV,SAAUoB,Y,oBAe3C,WACE,MAAyCC,KAAKN,MAAtCf,EAAR,EAAQA,SAAuBc,GAA/B,EAAkBH,YAAlB,EAA+BG,OAI/B,OACE,sBAAKtB,UAAU,MAAf,UACA,mCAAOsB,EAAP,OACA,cAAC,EAAD,CAAWN,eAAkBa,KAAKb,iBAIlC,cAAC,EAAD,CAAUR,SAAUA,W,GA7CRsB,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7941df66.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n\r\n    <div className=\"card-container\">\r\n        {/* <h1> {props.monster.id} </h1> */}\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2> { props.monster.name } </h2>\r\n        <p> { props.monster.email } </p>\r\n        {/* <p> { props.monster.phone } </p>   */}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n        \r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n          ))}\r\n\r\n        </div>\r\n    );","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className = 'search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        />\r\n\r\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n// import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n      title: '',\n    };\n    // too verbose (can be replaced with =>)\n    // this.handleChange = this.handleChange.bind(this); \n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => \n    response.json()\n    // .then(users => console.log(users))\n    .then(users => this.setState({ monsters: users }))\n    )  \n  }\n\n  // handleChange = (e) => {\n  //   this.setState({ searchField: e.target.value, title: event.target.value })\n  // }\n\n  onSearchChange = event => {\n    this.setState({\n      searchField: event.target.value,\n      title: event.target.value\n    });\n  };\n\n  render() {\n    const { monsters, searchField, title } = this.state;\n    // const filteredMonsters = monsters.filter(\n    //   monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n    // )\n    return(\n      <div className=\"App\">\n      <h1> { title } </h1>\n      <SearchBox onSearchChange = {this.onSearchChange} />\n        {/* // placeholder = 'search monsters'\n        // handleChange =  {this.handleChange}\n      // /> */}\n      <CardList monsters={monsters} /> \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}